"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const styles_1 = require("./styles");
const DotsForm = ({ showDots, sizeForDefaultDot, customDot, customActiveDot, setShowDots, setSizeForDefaultDot, setSizeForDefaultActiveDot, setDotColor, setActiveDotColor, setDotsAnimation, setCustomDot, setCustomActiveDot }) => {
    const handleTextInput = (e, setValue) => {
        const trimmedString = e.target.value.replace(/\s/g, '');
        setValue(trimmedString);
    };
    return ((0, jsx_runtime_1.jsx)(styles_1.Form, { children: (0, jsx_runtime_1.jsxs)(styles_1.Fieldset, { children: [(0, jsx_runtime_1.jsx)(styles_1.Legend, { children: "Dots" }), (0, jsx_runtime_1.jsxs)(styles_1.BooleanValue, { children: [(0, jsx_runtime_1.jsx)("p", { children: "showDots" }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("label", { children: [(0, jsx_runtime_1.jsx)("input", { type: "radio", name: "showDots", checked: showDots, onChange: () => setShowDots(true) }), "Yes"] }), (0, jsx_runtime_1.jsxs)("label", { children: [(0, jsx_runtime_1.jsx)("input", { type: "radio", name: "showDots", checked: !showDots, onChange: () => setShowDots(false) }), "No"] })] })] }), (0, jsx_runtime_1.jsxs)(styles_1.Field, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", Object.assign({ htmlFor: "sizeForDefaultDot" }, { children: "sizeForDefaultDot" })), (0, jsx_runtime_1.jsx)(styles_1.TextInput, { id: "sizeForDefaultDot", type: "number", placeholder: "12", onChange: (e) => {
                                        console.log(sizeForDefaultDot);
                                        setSizeForDefaultDot(+e.target.value);
                                    } })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", Object.assign({ htmlFor: "sizeForDefaultActiveDot" }, { children: "sizeForDefaultActiveDot" })), (0, jsx_runtime_1.jsx)(styles_1.TextInput, { id: "sizeForDefaultActiveDot", type: "number", placeholder: "12", onChange: (e) => setSizeForDefaultActiveDot(+e.target.value) })] })] }), (0, jsx_runtime_1.jsxs)(styles_1.Field, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", Object.assign({ htmlFor: "dotColor" }, { children: "dotColor" })), (0, jsx_runtime_1.jsx)(styles_1.TextInput, { id: "dotColor", type: "color", placeholder: "#c7c7c7", onChange: (e) => handleTextInput(e, setDotColor) })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", Object.assign({ htmlFor: "activeDotColor" }, { children: "activeDotColor" })), (0, jsx_runtime_1.jsx)(styles_1.TextInput, { id: "activeDotColor", type: "color", placeholder: "#000000", onChange: (e) => setActiveDotColor(e.target.value) })] })] }), (0, jsx_runtime_1.jsxs)(styles_1.Field, { children: [(0, jsx_runtime_1.jsxs)(styles_1.BooleanValue, { children: [(0, jsx_runtime_1.jsx)("p", { children: "customDot" }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("label", { children: [(0, jsx_runtime_1.jsx)("input", { type: "radio", name: "customDot", value: "circle", checked: customDot === 'circle', onChange: (e) => setCustomDot(e.target.value) }), "Custom circle"] }), (0, jsx_runtime_1.jsxs)("label", { children: [(0, jsx_runtime_1.jsx)("input", { type: "radio", name: "customDot", value: "unicorn", checked: customDot === 'unicorn', onChange: (e) => setCustomDot(e.target.value) }), "Unicorn"] }), (0, jsx_runtime_1.jsxs)("label", { children: [(0, jsx_runtime_1.jsx)("input", { type: "radio", name: "customDot", value: "none", checked: customDot === 'none', onChange: (e) => setCustomDot(e.target.value) }), "None"] })] })] }), (0, jsx_runtime_1.jsxs)(styles_1.BooleanValue, { children: [(0, jsx_runtime_1.jsx)("p", { children: "customActiveDot" }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("label", { children: [(0, jsx_runtime_1.jsx)("input", { type: "radio", name: "customActiveDot", value: "active-circle", checked: customActiveDot === 'active-circle', onChange: (e) => setCustomActiveDot(e.target.value) }), "Custom active circle"] }), (0, jsx_runtime_1.jsxs)("label", { children: [(0, jsx_runtime_1.jsx)("input", { type: "radio", name: "customActiveDot", value: "red-unicorn", checked: customActiveDot === 'red-unicorn', onChange: (e) => setCustomActiveDot(e.target.value) }), "Red Unicorn"] }), (0, jsx_runtime_1.jsxs)("label", { children: [(0, jsx_runtime_1.jsx)("input", { type: "radio", name: "customActiveDot", value: "none", checked: customActiveDot === 'none', onChange: (e) => setCustomActiveDot(e.target.value) }), "None"] })] })] })] }), (0, jsx_runtime_1.jsx)(styles_1.Field, { children: (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", Object.assign({ htmlFor: "dotsAnimation" }, { children: "dotsAnimation" })), (0, jsx_runtime_1.jsxs)("select", Object.assign({ onChange: (e) => setDotsAnimation(e.target.value) }, { children: [(0, jsx_runtime_1.jsx)("option", Object.assign({ value: "" }, { children: "-- Please select --" })), (0, jsx_runtime_1.jsx)("option", Object.assign({ value: "default" }, { children: "default" })), (0, jsx_runtime_1.jsx)("option", Object.assign({ value: "sliding" }, { children: "sliding" }))] }))] }) })] }) }));
};
exports.default = DotsForm;
//# sourceMappingURL=index.js.map